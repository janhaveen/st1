<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   
	   xsi:schemaLocation="http://www.springframework.org/schema/beans 
 						   http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	   					   http://www.springframework.org/schema/aop
						   http://www.springframework.org/schema/aop/spring-aop.xsd
						   http://www.springframework.org/schema/context 
						   http://www.springframework.org/schema/context/spring-context-4.3.xsd
						   http://www.springframework.org/schema/mvc 
						   http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
						   http://www.springframework.org/schema/tx 
						   http://www.springframework.org/schema/tx/spring-tx.xsd">
		
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>/WEB-INF/db-config.properties</value>
            </list> 
        </property>
    </bean>
    
	<context:annotation-config></context:annotation-config>	
	<context:component-scan base-package="com.controller"></context:component-scan>
	<context:component-scan base-package="com.dao"></context:component-scan>
	<context:component-scan base-package="com.service"></context:component-scan>
	<context:component-scan base-package="com.dao.Impl"></context:component-scan>
	<context:component-scan base-package="com.service.Impl"></context:component-scan>
	<mvc:annotation-driven></mvc:annotation-driven>
	
	<!-- <bean id="idiotDao" class="org.dao.IdiotDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<bean id="idiotService" class="org.service.IdiotService">
		<property name="idiotDao" ref="idiotDao"></property>
	</bean>
	 -->
	 
	<!--  <bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="/WEB-INF/messages"></property>
	</bean> -->
	
	 <mvc:resources mapping="/resources/**" location="/resources/" />
	 
	 <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <property name="prefix" value="/WEB-INF/jsp/"></property>  
        <property name="suffix" value=".jsp"></property>       
     </bean>
     
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
			<property name="driverClassName" value="${jdbc.driver.className}" />
			<property name="url" value="${jdbc.url}"/>
			<property name="username" value="${jdbc.username}"/>
			<property name="password" value="${jdbc.password}" />
	</bean>
	
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="persistenceUnitName" value="spring-jpa-unit" />
		<property name="packagesToScan" value="com.pojo"/>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.formate_sql">true</prop>
			</props>
		</property>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"></property>
	</bean>
	
	<!-- <bean id="dataSourceMysql" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
			<property name="driverClassName" value="${jdbc.driver.className.mysql}" />
			<property name="url" value="${jdbc.url.mysql}"/>
			<property name="username" value="${jdbc.username.mysql}"/>
			<property name="password" value="${jdbc.password.mysql}" />
	</bean>
	
	<bean id="entityManagerFactoryMySql" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSourceMysql"></property>
		<property name="persistenceUnitName" value="spring-jpa-unit" />
		<property name="packagesToScan" value="com.dao"/>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.formate_sql">true</prop>
			</props>
		</property>
	</bean>
	
	<bean id="transactionManagerMySql" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactoryMySql"></property>
	</bean> -->
	
	<tx:annotation-driven proxy-target-class="true" />	
</beans>